{"ast":null,"code":"var _jsxFileName = \"C:\\\\data\\\\q1\\\\rule-engine-frontend\\\\src\\\\components\\\\EvaluateRule.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EvaluateRule = () => {\n  _s();\n  const [ruleId, setRuleId] = useState('');\n  const [userData, setUserData] = useState({});\n  const [result, setResult] = useState(null);\n  const handleEvaluate = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/evaluate-rule', {\n        rule_id: ruleId,\n        user_data: userData\n      });\n      setResult(response.data.result);\n    } catch (error) {\n      console.error('Error evaluating rule:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Evaluate Rule\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Rule ID\",\n      onChange: e => setRuleId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Enter User Data (JSON format)\",\n      onChange: e => setUserData(JSON.parse(e.target.value))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleEvaluate,\n      children: \"Evaluate Rule\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), result !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Evaluation Result: \", result.toString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(EvaluateRule, \"2pvT/6bDacNwu1hcypUXqJfA3C4=\");\n_c = EvaluateRule;\nexport default EvaluateRule;\nvar _c;\n$RefreshReg$(_c, \"EvaluateRule\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","EvaluateRule","_s","ruleId","setRuleId","userData","setUserData","result","setResult","handleEvaluate","response","post","rule_id","user_data","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","value","JSON","parse","onClick","toString","_c","$RefreshReg$"],"sources":["C:/data/q1/rule-engine-frontend/src/components/EvaluateRule.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst EvaluateRule = () => {\r\n  const [ruleId, setRuleId] = useState('');\r\n  const [userData, setUserData] = useState({});\r\n  const [result, setResult] = useState(null);\r\n\r\n  const handleEvaluate = async () => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/evaluate-rule', {\r\n        rule_id: ruleId,\r\n        user_data: userData\r\n      });\r\n      setResult(response.data.result);\r\n    } catch (error) {\r\n      console.error('Error evaluating rule:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Evaluate Rule</h3>\r\n      <input type=\"text\" placeholder=\"Rule ID\" onChange={(e) => setRuleId(e.target.value)} />\r\n      <textarea\r\n        placeholder=\"Enter User Data (JSON format)\"\r\n        onChange={(e) => setUserData(JSON.parse(e.target.value))}\r\n      />\r\n      <button onClick={handleEvaluate}>Evaluate Rule</button>\r\n      {result !== null && <p>Evaluation Result: {result.toString()}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EvaluateRule;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE1C,MAAMY,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAAC,qCAAqC,EAAE;QACvEC,OAAO,EAAET,MAAM;QACfU,SAAS,EAAER;MACb,CAAC,CAAC;MACFG,SAAS,CAACE,QAAQ,CAACI,IAAI,CAACP,MAAM,CAAC;IACjC,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,oBACEf,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBrB,OAAA;MAAOsB,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,SAAS;MAACC,QAAQ,EAAGC,CAAC,IAAKrB,SAAS,CAACqB,CAAC,CAACC,MAAM,CAACC,KAAK;IAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvFrB,OAAA;MACEuB,WAAW,EAAC,+BAA+B;MAC3CC,QAAQ,EAAGC,CAAC,IAAKnB,WAAW,CAACsB,IAAI,CAACC,KAAK,CAACJ,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D,CAAC,eACFrB,OAAA;MAAQ8B,OAAO,EAAErB,cAAe;MAAAQ,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACtDd,MAAM,KAAK,IAAI,iBAAIP,OAAA;MAAAiB,QAAA,GAAG,qBAAmB,EAACV,MAAM,CAACwB,QAAQ,CAAC,CAAC;IAAA;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9D,CAAC;AAEV,CAAC;AAACnB,EAAA,CA7BID,YAAY;AAAA+B,EAAA,GAAZ/B,YAAY;AA+BlB,eAAeA,YAAY;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}